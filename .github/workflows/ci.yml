name: CI Build, Test with PostgreSQL, and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: powerDB
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        options: >-
          --health-cmd "pg_isready -U user -d powerDB"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_PROFILES_ACTIVE: local
      SPRING_LIQUIBASE_ENABLED: true
      IMAGE_NAME: haruttarzyan/powerfind
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: temurin
          cache: gradle

      - name: Make Gradle Wrapper executable
        run: chmod +x ./gradlew

      - name: Build and run tests with Gradle
        run: ./gradlew clean test

      - name: Build JAR with Gradle
        run: ./gradlew bootJar

      - name: Prepare Kaniko Docker config
        run: |
          mkdir -p "${{ runner.temp }}/docker"
          cat <<EOF > "${{ runner.temp }}/docker/config.json"
          {
            "auths": {
              "https://index.docker.io/v1/": {
                "username": "${{ secrets.DOCKER_USERNAME }}",
                "password": "${{ secrets.DOCKER_TOKEN }}"
              }
            }
          }
          EOF

      - name: Build and push Docker image with Kaniko
        run: |
          docker run \
            -v "${{ github.workspace }}:/workspace" \
            -v "${{ runner.temp }}/docker:/kaniko/.docker" \
            gcr.io/kaniko-project/executor:latest \
            --context /workspace \
            --dockerfile /workspace/Dockerfile \
            --destination docker.io/${{ env.IMAGE_NAME }}:${{ env.TAG }} \
            --cache=true
